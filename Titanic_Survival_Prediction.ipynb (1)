{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMyfMiPbZAwjKFU3YNMa/Xj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"xy5yBYpjIu45","executionInfo":{"status":"ok","timestamp":1749732090356,"user_tz":-330,"elapsed":8603,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["url = \"https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv\"\n","df = pd.read_csv(url)"],"metadata":{"id":"ROpQPfRxLKTG","executionInfo":{"status":"ok","timestamp":1749732093593,"user_tz":-330,"elapsed":251,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"2Q_vhbdNLRXE","executionInfo":{"status":"ok","timestamp":1749732095480,"user_tz":-330,"elapsed":323,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"ae4ef9ac-127c-4a4f-da54-4e42c8d27853"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-879e3471-258c-4d9b-a5d5-f78fa60ac041\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-879e3471-258c-4d9b-a5d5-f78fa60ac041')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-879e3471-258c-4d9b-a5d5-f78fa60ac041 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-879e3471-258c-4d9b-a5d5-f78fa60ac041');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4eeeea71-ee5a-452d-99c6-69a42b968e43\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4eeeea71-ee5a-452d-99c6-69a42b968e43')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4eeeea71-ee5a-452d-99c6-69a42b968e43 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g0FmuSctOzBF","executionInfo":{"status":"ok","timestamp":1749732098698,"user_tz":-330,"elapsed":29,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"033e2331-abd6-46c0-a0b0-acaf6e65a96f"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"W92W0AKeQsjM","executionInfo":{"status":"ok","timestamp":1749732101347,"user_tz":-330,"elapsed":53,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"d0ae55af-428a-430c-da77-4c0462772af4"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            177\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         2\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>177</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ticket</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cabin</th>\n","      <td>687</td>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.isnull().sum().sort_values(ascending=False).plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JSlnFo7VSFco","executionInfo":{"status":"ok","timestamp":1749732105244,"user_tz":-330,"elapsed":1033,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"731b8fcc-b83a-4053-b590-37c6cbb6a388"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAigAAAHjCAYAAAAJyuRvAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAS/ZJREFUeJzt3Xt8j/Xj//HnDnZg3luTbdTmEMVCjmVRScuwlFMpQhJ9NBLl9MkHqRCJlKhvcugkOvigT845xFJNWJiztmIj2sZkM3v9/vDblbch03Jd43G/3a5b3td1be/nW7b3830dXi8PY4wRAACAg3jaHQAAAOBsFBQAAOA4FBQAAOA4FBQAAOA4FBQAAOA4FBQAAOA4FBQAAOA4FBQAAOA43nYHuBR5eXnav3+/SpcuLQ8PD7vjAACAi2CM0dGjR1W+fHl5el74GEmxLCj79+9XeHi43TEAAMAlSElJ0fXXX3/BfYplQSldurSk0y/Q5XLZnAYAAFyMzMxMhYeHW+/jF1IsC0r+aR2Xy0VBAQCgmLmYyzO4SBYAADgOBQUAADgOBQUAADhOoQpKxYoV5eHhUWCJi4uTJJ04cUJxcXEqU6aMAgIC1K5dO6Wlpbl9j+TkZMXGxqpkyZIKCQnRgAEDlJubW3SvCAAAFHuFKijff/+9Dhw4YC1Lly6VJD344IOSpH79+mnBggWaO3euVq1apf3796tt27bW1586dUqxsbHKycnRunXrNHPmTM2YMUPDhg0rwpcEAACKOw9jjLnUL37mmWe0cOFC7dy5U5mZmSpbtqw++ugjtW/fXpKUlJSk6tWrKz4+Xg0bNtRXX32l++67T/v371doaKgkaerUqRo0aJAOHTokHx+fi3rezMxMBQYGKiMjg7t4AAAoJgrz/n3J16Dk5OTogw8+0OOPPy4PDw8lJCTo5MmTio6OtvapVq2aIiIiFB8fL0mKj49XzZo1rXIiSTExMcrMzNSWLVsuNQoAALjCXPI4KPPmzVN6eroee+wxSVJqaqp8fHwUFBTktl9oaKhSU1Otfc4sJ/nb87edT3Z2trKzs63HmZmZlxobAAAUA5d8BGXatGlq0aKFypcvX5R5zmn06NEKDAy0Foa5BwDgynZJBeXnn3/WsmXL9MQTT1jrwsLClJOTo/T0dLd909LSFBYWZu1z9l09+Y/z9zmXIUOGKCMjw1pSUlIuJTYAACgmLqmgTJ8+XSEhIYqNjbXW1atXTyVKlNDy5cutddu3b1dycrKioqIkSVFRUUpMTNTBgwetfZYuXSqXy6XIyMjzPp+vr681rD3D2wMAcOUr9DUoeXl5mj59urp27Spv7z+/PDAwUN27d1f//v0VHBwsl8ulPn36KCoqSg0bNpQkNWvWTJGRkercubPGjh2r1NRUDR06VHFxcfL19S26VwUAAIq1QheUZcuWKTk5WY8//niBbRMmTJCnp6fatWun7OxsxcTE6K233rK2e3l5aeHCherVq5eioqJUqlQpde3aVSNHjvx7rwIAAFxR/tY4KHZhHBQAAIqfwrx/X/JtxsVFxcFfFvn33Dcm9q93AgAAl4zJAgEAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgONQUAAAgOMUuqD8+uuvevTRR1WmTBn5+/urZs2a+uGHH6ztxhgNGzZM5cqVk7+/v6Kjo7Vz506373HkyBF16tRJLpdLQUFB6t69u44dO/b3Xw0AALgiFKqg/P7772rUqJFKlCihr776Slu3btX48eN1zTXXWPuMHTtWkyZN0tSpU7V+/XqVKlVKMTExOnHihLVPp06dtGXLFi1dulQLFy7U6tWr1bNnz6J7VQAAoFjzMMaYi9158ODBWrt2rdasWXPO7cYYlS9fXs8++6yee+45SVJGRoZCQ0M1Y8YMPfzww9q2bZsiIyP1/fffq379+pKkRYsWqWXLlvrll19Uvnz5v8yRmZmpwMBAZWRkyOVyXXDfioO/vNiXd9H2jYkt8u8JAMCVrjDv34U6gjJ//nzVr19fDz74oEJCQlSnTh393//9n7V97969Sk1NVXR0tLUuMDBQt912m+Lj4yVJ8fHxCgoKssqJJEVHR8vT01Pr168/5/NmZ2crMzPTbQEAAFeu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JQEAAJIKWVCmTJkiSWrSpInb+unTp+uxxx6TJE2YMEGenp5q166dsrOzFRMTo7feesva18vLSwsXLlSvXr0UFRWlUqVKqWvXrho5cuTfeyUAAOCK8bfGQbEL46AAAFD8XLZxUAAAAP4JFBQAAOA4FBQAAOA4FBQAAOA4FBQAAOA4lzSSLIpeUd9txJ1GAIDijCMoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcSgoAADAcQpdUFavXq1WrVqpfPny8vDw0Lx589y2G2M0bNgwlStXTv7+/oqOjtbOnTvd9jly5Ig6deokl8uloKAgde/eXceOHftbLwQAAFw5Cl1QsrKydMstt2jy5Mnn3D527FhNmjRJU6dO1fr161WqVCnFxMToxIkT1j6dOnXSli1btHTpUi1cuFCrV69Wz549L/1VAACAK4p3Yb+gRYsWatGixTm3GWM0ceJEDR06VA888IAkadasWQoNDdW8efP08MMPa9u2bVq0aJG+//571a9fX5L0xhtvqGXLlnr11VdVvnz5v/FyAADAlaBIr0HZu3evUlNTFR0dba0LDAzUbbfdpvj4eElSfHy8goKCrHIiSdHR0fL09NT69evP+X2zs7OVmZnptgAAgCtXkRaU1NRUSVJoaKjb+tDQUGtbamqqQkJC3LZ7e3srODjY2udso0ePVmBgoLWEh4cXZWwAAOAwxeIuniFDhigjI8NaUlJS7I4EAAD+QUVaUMLCwiRJaWlpbuvT0tKsbWFhYTp48KDb9tzcXB05csTa52y+vr5yuVxuCwAAuHIVaUGpVKmSwsLCtHz5cmtdZmam1q9fr6ioKElSVFSU0tPTlZCQYO2zYsUK5eXl6bbbbivKOAAAoJgq9F08x44d065du6zHe/fu1caNGxUcHKyIiAg988wzeumll1S1alVVqlRJ//nPf1S+fHm1bt1aklS9enU1b95cPXr00NSpU3Xy5En17t1bDz/8MHfwAAAASZdQUH744Qfdfffd1uP+/ftLkrp27aoZM2Zo4MCBysrKUs+ePZWenq7GjRtr0aJF8vPzs77mww8/VO/evXXPPffI09NT7dq106RJk4rg5QAAgCuBhzHG2B2isDIzMxUYGKiMjIy/vB6l4uAvi/z5942JLfLvWdQ5/4mMAAD8HYV5/y4Wd/EAAICrCwUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4DgUFAAA4jq0FZfLkyapYsaL8/Px022236bvvvrMzDgAAcAjbCsonn3yi/v37a/jw4dqwYYNuueUWxcTE6ODBg3ZFAgAADmFbQXnttdfUo0cPdevWTZGRkZo6dapKliyp9957z65IAADAIbzteNKcnBwlJCRoyJAh1jpPT09FR0crPj6+wP7Z2dnKzs62HmdkZEiSMjMz//K58rKPF0FidxfzvIVV1Dn/iYw1hi8u8u/50wsxRf49AQDOlP/eZIz5y31tKSi//fabTp06pdDQULf1oaGhSkpKKrD/6NGj9cILLxRYHx4e/o9lvJDAibY8baEUh4xS8ckJACg6R48eVWBg4AX3saWgFNaQIUPUv39/63FeXp6OHDmiMmXKyMPDo0ieIzMzU+Hh4UpJSZHL5SqS71nUyFh0ikNOMhad4pCTjEWnOOS8WjMaY3T06FGVL1/+L/e1paBce+218vLyUlpamtv6tLQ0hYWFFdjf19dXvr6+buuCgoL+kWwul8ux/1jykbHoFIecZCw6xSEnGYtOcch5NWb8qyMn+Wy5SNbHx0f16tXT8uXLrXV5eXlavny5oqKi7IgEAAAcxLZTPP3791fXrl1Vv3593XrrrZo4caKysrLUrVs3uyIBAACHsK2gdOjQQYcOHdKwYcOUmpqq2rVra9GiRQUunL1cfH19NXz48AKnkpyEjEWnOOQkY9EpDjnJWHSKQ04y/jUPczH3+gAAAFxGzMUDAAAch4ICAAAch4ICAAAch4ICAAAch4ICAAAch4JSDOTk5Gj79u3Kzc21OwoAONrBgwe1Zs0arVmzRgcPHrQ7TrFSuXJlHT58uMD69PR0Va5c+bLnKRZz8fxTTp06pRkzZmj58uU6ePCg8vLy3LavWLHCpmSnHT9+XH369NHMmTMlSTt27FDlypXVp08fXXfddRo8eLCt+fDP2bVrl3bv3q0777xT/v7+MsYU2bxT/5T09PR/bAqKi9W2bduL3vfzzz//B5NcnK+//lp33333Obe9/fbbevLJJy9zouLr6NGjeuqppzR79mydOnVKkuTl5aUOHTpo8uTJFz28+tVs37591t/dmbKzs/Xrr79e9jxXdUHp27evZsyYodjYWNWoUcNxbwBDhgzRpk2btHLlSjVv3txaHx0drREjRtheUDZv3nzR+9aqVesfTHJ+Z04y+Vdee+21fzDJxTl8+LA6dOigFStWyMPDQzt37lTlypXVvXt3XXPNNRo/frzdESVJr7zyiipWrKgOHTpIkh566CF99tlnCgsL0//+9z/dcssttuQ6803IGKMvvvhCgYGBql+/viQpISFB6enphSoy/6TmzZvr6aef1qhRo1SiRAlJp2d779atm7755hvHFZScnJxzfpiLiIiwKdGfnnjiCf34449auHChNWVKfHy8+vbtqyeffFKzZ8+2OeFpu3fv1vTp07V79269/vrrCgkJ0VdffaWIiAjdfPPNtmSaP3++9efFixe7/RydOnVKy5cvV8WKFS9/MHMVK1OmjPnyyy/tjnFeERERJj4+3hhjTEBAgNm9e7cxxpidO3ea0qVL2xnNGGOMh4eH8fT0tP57ocUuTZo0cVtcLpcpWbKkqVOnjqlTp44pVaqUcblc5u6777Yt45k6d+5sYmJiTEpKitv/80WLFpnIyEib0/2pYsWKZu3atcYYY5YsWWKCgoLM4sWLTffu3c29995rc7rTBg4caJ544gmTm5trrcvNzTU9e/Y0zz33nI3J/rR27Vpzww03mFtuucVs2bLFLFy40ISGhpo777zT7Nu3z+54lh07dpjGjRsX+LnO/9l3gpIlS5o1a9YUWL969WpTsmRJGxIVtHLlSuPv72+io6ONj4+P9fM9evRo065dO9tyeXh4uP0+P3Px8fExN954o1mwYMFlz3VVF5Ry5cqZ7du32x3jvPz9/a1/wGe+WW3cuNG4XC47oxljjNm3b5+1fPHFF+aGG24wU6dONZs2bTKbNm0yU6dONVWrVjVffPGF3VGNMcaMHz/etGrVyhw5csRad+TIEfPAAw+YV1991cZkfwoNDTUbN240xrj/P9+9e7cpVaqUndHc+Pn5meTkZGOMMU8//bTp2bOnMcaY7du3m6CgIDujWa699lqTlJRUYH1SUpIJDg62IdG5HT161HTq1Mn4+vqaEiVKmDFjxpi8vDy7Y7m5/fbbzZ133mn+97//mR9//NFs3LjRbXGC8PBws3nz5gLrN23aZK677jobEhXUsGFDM378eGOM+8/3+vXrHZGxYsWK5tChQ3bHsFzVBeXVV181Tz31lON+GeS74447zKRJk4wxp/8x79mzxxhjTO/evU1MTIyd0Qpo0KDBOY9Gffnll6Zu3bo2JCqofPny5qeffiqwPjEx0ZQrV86GRAUFBASYHTt2WH/O/wX2/fffO+pNtVy5ctYRlBtvvNHMmTPHGHP6zd8JR/eMMSYoKMjMmzevwPp58+Y5pkQZY0xCQoK56aabzA033GD8/f1Nt27dzLFjx+yO5aZkyZJm27Ztdse4oLfffttER0ebAwcOWOsOHDhgmjVrZqZOnWpjsj+VKlXK+j1+5s/33r17ja+vr53RCvjjjz/sjmCu6mtQvvnmG3399df66quvdPPNN1vngPPZfRHdqFGj1KJFC23dulW5ubl6/fXXtXXrVq1bt06rVq2yNdvZEhMTValSpQLrK1WqpK1bt9qQqKDMzEwdOnSowPpDhw7p6NGjNiQq6I477tCsWbP04osvSpI8PDyUl5ensWPHnvdiSju0bdtWHTt2VNWqVXX48GG1aNFCkvTjjz+qSpUqNqc7rVu3burevbt2796tW2+9VZK0fv16jRkzxjGzpo8ZM0bDhw9Xz549NW7cOO3atUudO3dWrVq19MEHH1jXUtgtMjJSv/32m90xLmjKlCnatWuXIiIirGtikpOT5evrq0OHDuntt9+29t2wYYMtGYOCgnTgwIECvyt//PFHXXfddbZkOlNeXp5efvllTZ06VWlpadaNGf/5z39UsWJFde/e/bLmuaoLSlBQkNq0aWN3jPNq3LixNm7cqDFjxqhmzZpasmSJ6tatq/j4eNWsWdPueG6qV6+u0aNH691335WPj4+k0xfUjR49WtWrV7c53Wlt2rRRt27dNH78eLc3rAEDBjjmosmxY8fqnnvu0Q8//KCcnBwNHDhQW7Zs0ZEjR7R27Vq741kmTJigihUrKiUlRWPHjlVAQIAk6cCBA3rqqadsTnfaq6++qrCwMI0fP14HDhyQJJUrV04DBgzQs88+a3O6015//XXNmzfPKng1atTQd999p3//+99q0qSJsrOzbcuWmZlp/fmVV17RwIEDNWrUKNWsWbPAhzmXy3W54xXQunVruyP8pYcffliDBg3S3LlzrQ8fa9eu1XPPPacuXbrYHU8vvfSSZs6cqbFjx6pHjx7W+ho1amjixImXvaAwmzGKxHfffadWrVrJGGPdsbN582Z5eHhowYIFViGw0/Hjx/Xcc8/pvffe08mTJyVJ3t7e6t69u8aNG6dSpUrZnPC0jIwMvfnmm9q0aZOOHTumunXrKi4uTuXKlbM7WrGV/2brhDfSM/3222+69tprz7lt1apVuuuuuy5zoj95enq63dloznGre/66c92aioJycnIUFxenGTNm6NSpU/L29tapU6fUsWNHzZgxQ15eXrbmq1Klit5++23dc889Kl26tDZt2qTKlSsrKSlJUVFR+v333y9rHgqKg535CeZMHh4e8vX1tY5UOEVWVpY+/PBDJSUlSTp9VKVjx46OeePPl5WVpd27d0uSbrjhBsflKw5mzpypa6+9VrGxsZKkgQMH6p133lFkZKQ+/vhjVahQweaEp+Xm5mrlypXavXu3OnbsqNKlS2v//v1yuVzWUR+7paen69NPP9Xu3bs1YMAABQcHa8OGDQoNDbX1sH9hTiPbWaTO5cSJE/rkk0+UlZWle++9V1WrVrU7kowxSklJUdmyZfXbb78pMTFRx44dU506dRyRT5L8/f2VlJSkChUquBWUrVu36tZbb9WxY8cua56rrqDUrVtXy5cv1zXXXKM6depccOwTu85T5jv7E8zZrr/+ej322GMaPny4PD0ZFPhKceLECW3evPmc403cf//9NqVyd9NNN2nKlClq2rSp4uPjFR0drQkTJmjhwoXy9va2/fotSfr555/VvHlzJScnKzs72zqf3rdvX2VnZ2vq1Kl2R9TmzZsVHR2twMBA7du3T9u3b1flypU1dOhQJScna9asWXZHdLz+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6ODBg6Zly5aOm736TE6YS+R81q1bV2B22BkzZpgKFSqYsmXLmh49epgTJ07YlM5dXl6e+fnnn83x48fNjh07zJw5c8yCBQscNdtycXHs2DETFxdnypYt69ifm+zsbBMdHW1uv/12ExAQYN544w3bslzV16CMGzdOffr00eTJk1W/fn1J0g8//KC+ffvq1VdftTndn1avXq1p06bps88+U/ny5dW2bVu9+eabdsdyk5mZqU6dOqlTp046fvy4jh07ppCQEEnSrl27HDE/i9NvK5dOf1Lt0KGD48e1eeaZZ5SRkaH169erSZMm+uKLL5SWlqaXXnpJ48ePtzuepNPXTbRp00aPPvqo7rnnHkf9nY4cOVJNmjTRfffdJ+n0XFY9evRQ165dVb16dY0bN07ly5fXiBEj7A2q0wOMValSxRq/w6m3yErS77//rmnTpmnbtm2STl+f8vjjjzvmiOnAgQP19ddfa8qUKercubMmT56sX3/9VW+//XaBaw0vl82bNxdYN2LECD3yyCN69NFHdeedd1r7XPYjo7ZVI5sEBQW5XTWdf0W1j4+P25/tvqL6wIEDZvTo0aZKlSomJCTE9O7d23h7e1t3JThN48aNz/mJLykpyRHTiBcXzzzzjHn55ZftjvGXwsLCrKOPpUuXNtu3bzfGnL5uqlGjRnZGs3z++eemffv2xt/f34SFhZm+ffua77//3u5YxpjTf39nZvn3v//t9vc2Z84cU716dTuinVNkZKQtd3EURv61EuHh4aZNmzamTZs2JiIiwrhcLrNq1Sq74xljjAkPDzdff/21Mcb99uhZs2aZFi1a2JLJw8PDeHp6Wke+z36c/2c7jvBcdUdQnH4VtSS1atVKq1evVmxsrCZOnKjmzZvLy8vLESNfnk9AQIDatGmj+fPnW+eot23bpqZNm+qhhx6yOd2fnDqseL5Tp05p7NixWrx4sWrVqlVgUrbXXnvNpmTusrKyrCNk11xzjQ4dOqQbb7xRNWvWtH0E5nxt2rRRmzZtdPToUX366af6+OOP1bBhQ1WuXFmPPvqohg0bZlu233//3e3OklWrVlkTBkpSgwYNlJKSYke0cxozZowGDBigKVOmOOratzPFxcWpQ4cOmjJlijWnzalTp/TUU08pLi5OiYmJNieUjhw5osqVK0s6fb3JkSNHJJ2eGLZXr162ZNq7d68t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qHFxNmzYYMLCwozL5TJeXl6mbNmyxsPDw5QqVcoxf5ctW7Y0devWNRs2bLDWbdiwwdSrV8/ExsYaY4yZP3++qVGjhl0R3SQlJZnWrVsbLy8v06VLF7Nv3z67I7nZuHGj6dixo4mMjDT16tUz3bp1KzDBpVOsX7/e9O3b14SFhZmSJUuaDh062B2pWPDx8THJyclu63x9fU1KSopNiQoqbhMvOpGHh4fbUPxOcVUWlN69e5saNWqYP/74o8C248ePmxo1apg+ffrYkKz4uuuuu0yPHj3MqVOnrHlukpOTzZ133mk+++wzu+MZY4w5cOCAiY6ONh4eHsbHx8eanfXee+81qampxhhjVqxYYRYvXmxrzl9//dU88cQTpkSJEua+++4ziYmJtuY506lTp8yYMWPM7bffburXr28GDhxojh8/bnesczr71E6zZs3MzJkzzdGjR+2OVmx4enqagwcPuq0LCAgwe/bssSlRQf/6179MVFSUWb16tenfv78pU6aMyc7OtrZ/8MEHpn79+jYmdD4PD48C/5+d4Ko8xZOWlqa6devKy8tLvXv3tma/TEpK0uTJk3Xq1Clt2LBBoaGhNictPoKCgrR+/XrddNNNCgoKUnx8vKpXr67169era9euSkpKsjuiJSkpSTt27JB0egqBs2c/tUtGRoZGjRqlN954Q7Vr19Yrr7ziuFMlL774okaMGKHo6Gj5+/tr8eLFeuSRRxwx9cLZPD091aBBA3Xs2FEPP/wwP8+X4OwBxqRzDzJm5wBjv/32m9q2batvvvlGAQEBmjlzptu0EPfcc48aNmzomNGincjT09PtYtnzyR//5nK5KguKJP3888/q1auXFi9e7Da5XUxMjCZPnlxgLgJcWNmyZa3bYW+88Ua98cYbiomJUVJSkurVq6esrCy7Izra2LFj9corrygsLEyjRo3SAw88YHekcyoO1yRIp+eGee+999S+fXtH3f1U3HTr1u2i9nPCOB/FceJFp/D09NTEiRP/8k6dswec+6ddtQUl3++//65du3bJGKOqVavyy+wSNWvWTI899pg6duyoHj16aPPmzXr66af1/vvv6/fff9f69evtjqhTp05pxowZWr58uQ4ePFhgYKcVK1bYlOz0Lwh/f39FR0dfcKA4u4fC9vX11a5du9zGifHz89OuXbscNw/T+WZmBeDu7NmWneKq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\n"},"metadata":{}}]},{"cell_type":"code","source":["df.isnull().sum()/len(df) * 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"MWMKlsuUS8GC","executionInfo":{"status":"ok","timestamp":1749732107443,"user_tz":-330,"elapsed":18,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"ab557771-0a17-4761-eff4-c1d94ea4e193"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId     0.000000\n","Survived        0.000000\n","Pclass          0.000000\n","Name            0.000000\n","Sex             0.000000\n","Age            19.865320\n","SibSp           0.000000\n","Parch           0.000000\n","Ticket          0.000000\n","Fare            0.000000\n","Cabin          77.104377\n","Embarked        0.224467\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>19.865320</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Ticket</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Cabin</th>\n","      <td>77.104377</td>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <td>0.224467</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df['Embarked'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"aq03Gn_0TgRg","executionInfo":{"status":"ok","timestamp":1749732110081,"user_tz":-330,"elapsed":17,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"4c17a6f6-7a94-4d15-a3dc-9757377cbaee"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Embarked\n","S    644\n","C    168\n","Q     77\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>S</th>\n","      <td>644</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>Q</th>\n","      <td>77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df['Age'] = df.groupby(['Pclass', 'Sex'])['Age'].transform(lambda x: x.fillna(x.median()))"],"metadata":{"id":"Xo1jNa4Ua1SN","executionInfo":{"status":"ok","timestamp":1749732114424,"user_tz":-330,"elapsed":16,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()/len(df) * 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"O-Ynf-Hvb2Pz","executionInfo":{"status":"ok","timestamp":1749732116725,"user_tz":-330,"elapsed":60,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"2ebbb0f3-9dee-42b1-e789-d4ca72ecdf18"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId     0.000000\n","Survived        0.000000\n","Pclass          0.000000\n","Name            0.000000\n","Sex             0.000000\n","Age             0.000000\n","SibSp           0.000000\n","Parch           0.000000\n","Ticket          0.000000\n","Fare            0.000000\n","Cabin          77.104377\n","Embarked        0.224467\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Survived</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Ticket</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Cabin</th>\n","      <td>77.104377</td>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <td>0.224467</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.groupby(['Pclass', 'Sex'])['Age'].median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"g0w9VtaGcghp","executionInfo":{"status":"ok","timestamp":1749732119274,"user_tz":-330,"elapsed":56,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"31f475af-164f-4560-ab76-d262f216c86d"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pclass  Sex   \n","1       female    35.0\n","        male      40.0\n","2       female    28.0\n","        male      30.0\n","3       female    21.5\n","        male      25.0\n","Name: Age, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Age</th>\n","    </tr>\n","    <tr>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>female</th>\n","      <td>35.0</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">2</th>\n","      <th>female</th>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">3</th>\n","      <th>female</th>\n","      <td>21.5</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>25.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df['Embarked'].isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ER5f65kDfDit","executionInfo":{"status":"ok","timestamp":1749732121781,"user_tz":-330,"elapsed":35,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"d16a5274-ae92-4e64-ce7f-e25075ed7fdc"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(2)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df['Embarked'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"SskmOK9qfFSS","executionInfo":{"status":"ok","timestamp":1749732124193,"user_tz":-330,"elapsed":70,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"241dd285-0ae3-47e4-b8db-237b495e03dd"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Embarked\n","S    644\n","C    168\n","Q     77\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Embarked</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>S</th>\n","      <td>644</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>Q</th>\n","      <td>77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6w0l07vCfIUM","executionInfo":{"status":"ok","timestamp":1749732126247,"user_tz":-330,"elapsed":21,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"a385e45b-4fd6-4fc9-92b9-cb35ba9549a0"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-3744086084>:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)\n"]}]},{"cell_type":"code","source":["df.drop('Cabin', axis=1, inplace=True)"],"metadata":{"id":"23p_fifIg2ZA","executionInfo":{"status":"ok","timestamp":1749732128260,"user_tz":-330,"elapsed":19,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["df['FamilySize'] = df['SibSp'] + df['Parch'] + 1"],"metadata":{"id":"xFkl3wanhm4h","executionInfo":{"status":"ok","timestamp":1749732129836,"user_tz":-330,"elapsed":7,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["df['IsAlone'] = 0\n","df.loc[df['FamilySize'] == 1, 'IsAlone'] = 1"],"metadata":{"id":"2Dp422m_g4XC","executionInfo":{"status":"ok","timestamp":1749732131878,"user_tz":-330,"elapsed":7,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["df.drop(['SibSp', 'Parch'], axis=1, inplace=True)"],"metadata":{"id":"atCPJ_Q2g5S4","executionInfo":{"status":"ok","timestamp":1749732133215,"user_tz":-330,"elapsed":20,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"gXQD3tqRhlu5","executionInfo":{"status":"ok","timestamp":1749732136702,"user_tz":-330,"elapsed":177,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"06dc8b07-ad63-4bb2-8b1c-5c23ae3f2172"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  \\\n","0                            Braund, Mr. Owen Harris    male  22.0   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0   \n","2                             Heikkinen, Miss. Laina  female  26.0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0   \n","4                           Allen, Mr. William Henry    male  35.0   \n","\n","             Ticket     Fare Embarked  FamilySize  IsAlone  \n","0         A/5 21171   7.2500        S           2        0  \n","1          PC 17599  71.2833        C           2        0  \n","2  STON/O2. 3101282   7.9250        S           1        1  \n","3            113803  53.1000        S           2        0  \n","4            373450   8.0500        S           1        1  "],"text/html":["\n","  <div id=\"df-310689cb-364a-47e7-88a9-52266a18e93c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>FamilySize</th>\n","      <th>IsAlone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-310689cb-364a-47e7-88a9-52266a18e93c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-310689cb-364a-47e7-88a9-52266a18e93c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-310689cb-364a-47e7-88a9-52266a18e93c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-28fcf962-a047-4e84-9132-c3a4e3725ebe\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28fcf962-a047-4e84-9132-c3a4e3725ebe')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-28fcf962-a047-4e84-9132-c3a4e3725ebe button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.304424074688153,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          59.0,\n          36.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FamilySize\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 11,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          8,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsAlone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# Extracting title\n","df['Title'] = df['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n","\n","# Checking how many unique titles exist\n","df['Title'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":648},"id":"XuAtPGmQk8ok","executionInfo":{"status":"ok","timestamp":1749732139291,"user_tz":-330,"elapsed":42,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"f6b97044-eed0-483c-b5b4-e8d54a29ab93"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Title\n","Mr          517\n","Miss        182\n","Mrs         125\n","Master       40\n","Dr            7\n","Rev           6\n","Col           2\n","Mlle          2\n","Major         2\n","Ms            1\n","Mme           1\n","Don           1\n","Lady          1\n","Sir           1\n","Capt          1\n","Countess      1\n","Jonkheer      1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Mr</th>\n","      <td>517</td>\n","    </tr>\n","    <tr>\n","      <th>Miss</th>\n","      <td>182</td>\n","    </tr>\n","    <tr>\n","      <th>Mrs</th>\n","      <td>125</td>\n","    </tr>\n","    <tr>\n","      <th>Master</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>Dr</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Rev</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Col</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Mlle</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Major</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Ms</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Mme</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Don</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Lady</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Sir</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Capt</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Countess</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Jonkheer</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# Replace rare titles with 'Rare'\n","df['Title'] = df['Title'].replace(['Lady', 'Countess', 'Capt', 'Col', 'Don', 'Dr',\n","                                   'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n","\n","# Normalize similar titles\n","df['Title'] = df['Title'].replace('Mlle', 'Miss')\n","df['Title'] = df['Title'].replace('Ms', 'Miss')\n","df['Title'] = df['Title'].replace('Mme', 'Mrs')"],"metadata":{"id":"zn4SQ7mzlAbf","executionInfo":{"status":"ok","timestamp":1749732142168,"user_tz":-330,"elapsed":40,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["df['Title'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"m4YFA7BEneIM","executionInfo":{"status":"ok","timestamp":1749732145880,"user_tz":-330,"elapsed":445,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"79b86ee5-7e25-48ce-d698-d971c48c1850"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Title\n","Mr        517\n","Miss      185\n","Mrs       126\n","Master     40\n","Rare       23\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Mr</th>\n","      <td>517</td>\n","    </tr>\n","    <tr>\n","      <th>Miss</th>\n","      <td>185</td>\n","    </tr>\n","    <tr>\n","      <th>Mrs</th>\n","      <td>126</td>\n","    </tr>\n","    <tr>\n","      <th>Master</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>Rare</th>\n","      <td>23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Drop unnecessary columns\n","df.drop(['PassengerId', 'Name', 'Ticket'], axis=1, inplace=True)"],"metadata":{"id":"iD1t3926o8ET","executionInfo":{"status":"ok","timestamp":1749732148645,"user_tz":-330,"elapsed":106,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Em0p3fj-pApv","executionInfo":{"status":"ok","timestamp":1749732150943,"user_tz":-330,"elapsed":12,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"6ac4ba71-8208-46ab-da48-4ab3935f5122"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Survived', 'Pclass', 'Sex', 'Age', 'Fare', 'Embarked', 'FamilySize',\n","       'IsAlone', 'Title'],\n","      dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","# Create label encoder instance\n","le = LabelEncoder()\n","\n","# Encode Sex\n","df['Sex'] = le.fit_transform(df['Sex'])\n","\n","# Encode Embarked\n","df['Embarked'] = le.fit_transform(df['Embarked'])\n","\n","# Encode Title\n","df['Title'] = le.fit_transform(df['Title'])"],"metadata":{"id":"Xr3JGYCKw-dN","executionInfo":{"status":"ok","timestamp":1749732153392,"user_tz":-330,"elapsed":187,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"lSvGentfxAKi","executionInfo":{"status":"ok","timestamp":1749732156324,"user_tz":-330,"elapsed":424,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"ce19ff11-d068-4a57-f122-8cde7b074ab8"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass  Sex   Age     Fare  Embarked  FamilySize  IsAlone  Title\n","0         0       3    1  22.0   7.2500         2           2        0      2\n","1         1       1    0  38.0  71.2833         0           2        0      3\n","2         1       3    0  26.0   7.9250         2           1        1      1\n","3         1       1    0  35.0  53.1000         2           2        0      3\n","4         0       3    1  35.0   8.0500         2           1        1      2"],"text/html":["\n","  <div id=\"df-9f4a7315-6ec7-4642-bd71-11ca6fa54167\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>FamilySize</th>\n","      <th>IsAlone</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>7.2500</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>71.2833</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>7.9250</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>53.1000</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>8.0500</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f4a7315-6ec7-4642-bd71-11ca6fa54167')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f4a7315-6ec7-4642-bd71-11ca6fa54167 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f4a7315-6ec7-4642-bd71-11ca6fa54167');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-57fe8c2f-3727-4e21-87dc-d8435ca8e0e2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-57fe8c2f-3727-4e21-87dc-d8435ca8e0e2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-57fe8c2f-3727-4e21-87dc-d8435ca8e0e2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.304424074688153,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          59.0,\n          36.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FamilySize\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 11,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          8,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsAlone\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Separate features and target\n","X = df.drop(\"Survived\", axis=1)\n","y = df[\"Survived\"]\n","\n","# Split the data (80% train, 20% test)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"O9vMX1ry3FtN","executionInfo":{"status":"ok","timestamp":1749732159206,"user_tz":-330,"elapsed":418,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","# Initialize the model\n","model = LogisticRegression(max_iter=1000)\n","\n","# Train the model\n","model.fit(X_train, y_train)\n","\n","# Predict on test set\n","y_pred = model.predict(X_test)\n","\n","# Evaluate\n","print(\"Accuracy:\", accuracy_score(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Doik4baW3XtI","executionInfo":{"status":"ok","timestamp":1749732162782,"user_tz":-330,"elapsed":358,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"9feb37cf-ecec-4300-f845-8322399cf2f8"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8156424581005587\n","Confusion Matrix:\n"," [[92 13]\n"," [20 54]]\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           0       0.82      0.88      0.85       105\n","           1       0.81      0.73      0.77        74\n","\n","    accuracy                           0.82       179\n","   macro avg       0.81      0.80      0.81       179\n","weighted avg       0.82      0.82      0.81       179\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","\n","# Use these only if not already defined:\n","# y_test = actual values\n","# y_pred = predicted values from logistic regression model\n","\n","# Step 1: Create the confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","\n","# Step 2: Plot it using seaborn\n","plt.figure(figsize=(6, 4))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Not Survived', 'Survived'], yticklabels=['Not Survived', 'Survived'])\n","plt.xlabel('Predicted')\n","plt.ylabel('Actual')\n","plt.title('Confusion Matrix - Logistic Regression')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"fvd5jFmm57eS","executionInfo":{"status":"ok","timestamp":1749734693379,"user_tz":-330,"elapsed":550,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"debb373f-768b-4f2f-cf9b-fe815d4f086f"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","models = {\n","    \"Logistic Regression\": LogisticRegression(),\n","    \"Decision Tree\": DecisionTreeClassifier(),\n","    \"Random Forest\": RandomForestClassifier()\n","}\n","\n","for name, model in models.items():\n","    model.fit(X_train, y_train)\n","    y_pred = model.predict(X_test)\n","\n","    print(f\"Model: {name}\")\n","    print(f\"Accuracy: {accuracy_score(y_test, y_pred)}\")\n","    print(\"Confusion Matrix:\")\n","    print(confusion_matrix(y_test, y_pred))\n","    print(\"Classification Report:\")\n","    print(classification_report(y_test, y_pred))\n","    print(\"-\"*50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bnm8gOmoW8Bt","executionInfo":{"status":"ok","timestamp":1749732172513,"user_tz":-330,"elapsed":2462,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"7f6e4983-f6c2-407c-fb4a-5f106bda0bb1"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_logistic.py:465: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. OF ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["Model: Logistic Regression\n","Accuracy: 0.8156424581005587\n","Confusion Matrix:\n","[[92 13]\n"," [20 54]]\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.82      0.88      0.85       105\n","           1       0.81      0.73      0.77        74\n","\n","    accuracy                           0.82       179\n","   macro avg       0.81      0.80      0.81       179\n","weighted avg       0.82      0.82      0.81       179\n","\n","--------------------------------------------------\n","Model: Decision Tree\n","Accuracy: 0.776536312849162\n","Confusion Matrix:\n","[[82 23]\n"," [17 57]]\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.83      0.78      0.80       105\n","           1       0.71      0.77      0.74        74\n","\n","    accuracy                           0.78       179\n","   macro avg       0.77      0.78      0.77       179\n","weighted avg       0.78      0.78      0.78       179\n","\n","--------------------------------------------------\n","Model: Random Forest\n","Accuracy: 0.8324022346368715\n","Confusion Matrix:\n","[[90 15]\n"," [15 59]]\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.86      0.86      0.86       105\n","           1       0.80      0.80      0.80        74\n","\n","    accuracy                           0.83       179\n","   macro avg       0.83      0.83      0.83       179\n","weighted avg       0.83      0.83      0.83       179\n","\n","--------------------------------------------------\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","\n","# Define the model\n","rf = RandomForestClassifier(random_state=42)\n","\n","# Define the parameters to search\n","param_grid = {\n","    'n_estimators': [100, 200, 300],\n","    'max_depth': [None, 5, 10, 20],\n","    'min_samples_split': [2, 5, 10],\n","    'min_samples_leaf': [1, 2, 4]\n","}\n","\n","# Set up GridSearchCV\n","grid_search = GridSearchCV(estimator=rf, param_grid=param_grid,\n","                           cv=5, n_jobs=-1, verbose=1, scoring='accuracy')\n","\n","# Fit to the training data\n","grid_search.fit(X_train, y_train)\n","\n","# Best parameters and score\n","print(\"Best Parameters:\", grid_search.best_params_)\n","print(\"Best Score:\", grid_search.best_score_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uhs4gWerlpNy","executionInfo":{"status":"ok","timestamp":1749732395831,"user_tz":-330,"elapsed":217193,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"3b6fd4ca-50e2-45ba-ce09-8a616c463474"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 108 candidates, totalling 540 fits\n","Best Parameters: {'max_depth': 5, 'min_samples_leaf': 1, 'min_samples_split': 2, 'n_estimators': 100}\n","Best Score: 0.8342263370432385\n"]}]},{"cell_type":"code","source":["best_rf = grid_search.best_estimator_\n","\n","# Predict on test data\n","y_pred = best_rf.predict(X_test)\n","\n","# Evaluate performance\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","print(\"Test Accuracy:\", accuracy_score(y_test, y_pred))\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"id":"F7330rZHm0bD","executionInfo":{"status":"ok","timestamp":1749732400576,"user_tz":-330,"elapsed":42,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"a88ddc5e-a408-47dc-b2b7-8843c3fa9d56","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Accuracy: 0.8100558659217877\n","Confusion Matrix:\n"," [[93 12]\n"," [22 52]]\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           0       0.81      0.89      0.85       105\n","           1       0.81      0.70      0.75        74\n","\n","    accuracy                           0.81       179\n","   macro avg       0.81      0.79      0.80       179\n","weighted avg       0.81      0.81      0.81       179\n","\n"]}]},{"cell_type":"code","source":["best_model = grid_search.best_estimator_"],"metadata":{"id":"ngUKmVDCLyYq","executionInfo":{"status":"ok","timestamp":1749732504515,"user_tz":-330,"elapsed":21,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["\n","# Assuming 'best_model' is our tuned Random Forest model\n","# And X_train.columns gives us the feature names\n","\n","# 1. Get feature importances\n","importances = best_model.feature_importances_\n","\n","# 2. Create a DataFrame for visualization\n","feat_importances = pd.DataFrame({\n","    'Feature': X_train.columns,\n","    'Importance': importances\n","}).sort_values(by='Importance', ascending=False)\n","\n","# 3. Plot\n","plt.figure(figsize=(10,6))\n","sns.barplot(data=feat_importances, x='Importance', y='Feature', palette='viridis')\n","plt.title('Feature Importance (Random Forest)')\n","plt.xlabel('Importance Score')\n","plt.ylabel('Features')\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":305},"id":"POP2eGwkLcSo","executionInfo":{"status":"ok","timestamp":1749734709561,"user_tz":-330,"elapsed":804,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"be5bd692-ed26-4817-a834-d6fb4c70287c"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-41-1918865201>:15: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(data=feat_importances, x='Importance', y='Feature', palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","\n","# Plotting correlation matrix\n","plt.figure(figsize=(10, 6))\n","sns.heatmap(X_train.corr(), annot=True, cmap='coolwarm', fmt='.2f')\n","plt.title(\"Feature Correlation Heatmap\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"UKuZwGCRMcKr","executionInfo":{"status":"ok","timestamp":1749734716937,"user_tz":-330,"elapsed":1606,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"bac89ba3-5c6f-430e-bcce-e7ef8ff262c0"},"execution_count":42,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","# Confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Not Survived', 'Survived'], yticklabels=['Not Survived', 'Survived'])\n","plt.xlabel('Predicted')\n","plt.ylabel('Actual')\n","plt.title('Confusion Matrix - Random Forest')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"_dPPjYjlN4qT","executionInfo":{"status":"ok","timestamp":1749734726885,"user_tz":-330,"elapsed":997,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"ae538b5a-4a81-49bf-80c5-0d8bca52b2f3"},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import roc_curve, auc\n","\n","# Get probabilities for the positive class\n","y_prob = best_rf.predict_proba(X_test)[:, 1]\n","\n","# ROC curve\n","fpr, tpr, thresholds = roc_curve(y_test, y_prob)\n","roc_auc = auc(fpr, tpr)\n","\n","plt.figure()\n","plt.plot(fpr, tpr, label='ROC curve (area = %0.2f)' % roc_auc)\n","plt.plot([0, 1], [0, 1], 'k--')  # Diagonal line\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic - Random Forest')\n","plt.legend(loc='lower right')\n","plt.grid()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"mD6rBVMkN6f_","executionInfo":{"status":"ok","timestamp":1749733069898,"user_tz":-330,"elapsed":582,"user":{"displayName":"vadi raj","userId":"16102474145285948803"}},"outputId":"6655a223-ccab-467c-d9c3-77248f5d7a36"},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]}]}